#!/usr/bin/env bash

OUTPUT_HEADER="sweph_alias.h"
HEADERS=("swephexp.h" "sweph.h")

# --- Header boilerplate ---
{
  echo "// Autogenerated alias header for Parabola TPE"
  echo "#ifndef SWEPH_ALIAS_H"
  echo "#define SWEPH_ALIAS_H"
  echo ""
  echo "#include \"parabola_wrapper.h\""
  echo ""
} > "$OUTPUT_HEADER"

# --- Find which headers actually exist ---
existing_headers=()
for hdr in "${HEADERS[@]}"; do
  if [[ -f "$hdr" ]]; then
    existing_headers+=("$hdr")
  else
    echo "⚠️  Warning: $hdr not found, skipping." >&2
  fi
done

# --- Extract all unique swe_* symbols ---
mapfile -t funcs < <(
  grep -hoE 'swe_[A-Za-z0-9_]+' "${existing_headers[@]}" \
    | sort -u
)

# --- Emit the CommandType enum ---
{
  echo "// CommandType enum (automatically numbered)"
  echo "typedef enum {"
  counter=1
  for f in "${funcs[@]}"; do
    # uppercase the symbol for the enum name
    enumname="CMD_${f^^}"
    echo "    ${enumname} = ${counter},"
    ((counter++))
  done
  echo "} CommandType;"
  echo ""
} >> "$OUTPUT_HEADER"

# --- Emit the function‐to‐wrapper aliases ---
{
  echo "// Function aliases → parabola_<func>"
  for f in "${funcs[@]}"; do
    echo "#define ${f} parabola_${f}"
  done
  echo ""
  echo "#endif // SWEPH_ALIAS_H"
  echo ""
  echo "// ✅ Generated ${OUTPUT_HEADER} with ${#funcs[@]} commands."
} >> "$OUTPUT_HEADER"
